name: Build Binaries
on:
  push:
  workflow_dispatch: 



jobs:     
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        os: [darwin, linux, windows]
        arch: [amd64]
        exclude:
          - os: windows
            arch: arm64
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
    - name: Copy Repository Contents
      uses: actions/checkout@master
    - name: Build Binary
      id: binary
      run: ./_action_files/build.sh
    - name: delete tags
      run: |
        git tag -d ${{ matrix.os }}-${{ matrix.arch }}
        git push --delete origin ${{ matrix.os }}-${{ matrix.arch }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ matrix.os }}-${{ matrix.arch }}
        release_name: ${{ matrix.os }}-${{ matrix.arch }}
        body: Binary for ${{ matrix.os }}-${{ matrix.arch }} build at ${{ github.sha }}.
    - name: Upload Release Asset
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ steps.binary.outputs.bin_path }}
        asset_name: hugo
        asset_content_type: application/unknown
    - name: Get Download URL
      run: echo ${{ steps.upload.browser_download_url }}

